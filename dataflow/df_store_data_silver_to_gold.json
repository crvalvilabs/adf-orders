{
	"name": "df_store_data_silver_to_gold",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_products_silver",
						"type": "DatasetReference"
					},
					"name": "ProductsSilver"
				},
				{
					"dataset": {
						"referenceName": "ds_stores_silver",
						"type": "DatasetReference"
					},
					"name": "StoresSilver"
				},
				{
					"dataset": {
						"referenceName": "ds_orders_silver",
						"type": "DatasetReference"
					},
					"name": "OrdersSilver"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "ExcludeCancelled"
				},
				{
					"name": "MonthYear"
				},
				{
					"name": "JoinProductsOrders"
				},
				{
					"name": "DropColumnsAndReorderColumns"
				},
				{
					"name": "GroupBy"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PRODUCT_ID as integer,",
				"          PRODUCT_NAME as string,",
				"          UNIT_PRICE as double,",
				"          UPDATED_TIMESTAMP as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> ProductsSilver",
				"source(output(",
				"          STORE_ID as integer,",
				"          STORE_NAME as string,",
				"          LATITUDE as double,",
				"          LONGITUDE as double,",
				"          UPDATED_TIMESTAMP as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> StoresSilver",
				"source(output(",
				"          ORDER_ID as integer,",
				"          ORDER_DATE as date,",
				"          CUSTOMER_ID as integer,",
				"          ORDER_STATUS as string,",
				"          STORE_ID as integer,",
				"          PRODUCT_ID as integer,",
				"          UNIT_PRICE as double,",
				"          QUANTITY as integer,",
				"          SUBTOTAL as double,",
				"          UPDATED_TIMESTAMP as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> OrdersSilver",
				"OrdersSilver filter(ORDER_STATUS != 'CANCELLED') ~> ExcludeCancelled",
				"ExcludeCancelled derive(MONTH_YEAR = toString(ORDER_DATE, 'MM-yyyy')) ~> MonthYear",
				"ProductsSilver, OrdersSilver join(ProductsSilver@PRODUCT_ID == OrdersSilver@PRODUCT_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinProductsOrders",
				"JoinProductsOrders select(mapColumn(",
				"          PRODUCT_ID = ProductsSilver@PRODUCT_ID,",
				"          PRODUCT_NAME,",
				"          UNIT_PRICE = ProductsSilver@UNIT_PRICE,",
				"          UPDATED_TIMESTAMP = ProductsSilver@UPDATED_TIMESTAMP,",
				"          ORDER_ID,",
				"          ORDER_DATE,",
				"          CUSTOMER_ID,",
				"          ORDER_STATUS,",
				"          STORE_ID,",
				"          PRODUCT_ID = OrdersSilver@PRODUCT_ID,",
				"          UNIT_PRICE = OrdersSilver@UNIT_PRICE,",
				"          QUANTITY,",
				"          SUBTOTAL,",
				"          UPDATED_TIMESTAMP = OrdersSilver@UPDATED_TIMESTAMP",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropColumnsAndReorderColumns",
				"DropColumnsAndReorderColumns aggregate(groupBy(PRODUCT_NAME)) ~> GroupBy"
			]
		}
	}
}
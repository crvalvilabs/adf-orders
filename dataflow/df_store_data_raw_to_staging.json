{
	"name": "df_store_data_raw_to_staging",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_orders",
						"type": "DatasetReference"
					},
					"name": "OrdersRaw"
				},
				{
					"dataset": {
						"referenceName": "ds_raw_order_items",
						"type": "DatasetReference"
					},
					"name": "OrdersItemsRaw"
				},
				{
					"dataset": {
						"referenceName": "ds_raw_customer",
						"type": "DatasetReference"
					},
					"name": "CustomersRaw"
				},
				{
					"dataset": {
						"referenceName": "ds_raw_products",
						"type": "DatasetReference"
					},
					"name": "ProductsRaw"
				},
				{
					"dataset": {
						"referenceName": "ds_raw_stores",
						"type": "DatasetReference"
					},
					"name": "StoresRaw"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_orders_staging",
						"type": "DatasetReference"
					},
					"name": "OrdersSink"
				},
				{
					"dataset": {
						"referenceName": "ds_order_item_staging",
						"type": "DatasetReference"
					},
					"name": "OrderItemSink"
				},
				{
					"dataset": {
						"referenceName": "ds_customer_staging",
						"type": "DatasetReference"
					},
					"name": "CustomerSink"
				},
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "OrderDatetimeAndUpdatedTimestamp"
				},
				{
					"name": "CastDataTypesOrders"
				},
				{
					"name": "DropOrderDatetimeAndReorder"
				},
				{
					"name": "CastTypesOrderItems"
				},
				{
					"name": "UpdatedDateOrderItems"
				},
				{
					"name": "DropItemLineId",
					"description": "Renaming UpdatedDateOrderItems to select1 with columns 'ORDER_ID, LINE_ITEM_ID, PRODUCT_ID, UNIT_PRICE, Q*\nselect1\nUANTITY, UPDATED_TIMESTAMP'"
				},
				{
					"name": "CastDataTypesCustomers"
				},
				{
					"name": "UpdateteTimestampCustomers"
				},
				{
					"name": "CastDataTypesStores"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ORDER_ID as string,",
				"          ORDER_DATETIME as string,",
				"          CUSTOMER_ID as string,",
				"          ORDER_STATUS as string,",
				"          STORE_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> OrdersRaw",
				"source(output(",
				"          ORDER_ID as short,",
				"          LINE_ITEM_ID as short,",
				"          PRODUCT_ID as short,",
				"          UNIT_PRICE as double,",
				"          QUANTITY as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> OrdersItemsRaw",
				"source(output(",
				"          CUSTOMER_ID as short,",
				"          EMAIL_ADDRESS as string,",
				"          FULL_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> CustomersRaw",
				"source(output(",
				"          PRODUCT_ID as short,",
				"          PRODUCT_NAME as string,",
				"          UNIT_PRICE as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> ProductsRaw",
				"source(output(",
				"          LATITUDE as double,",
				"          LONGITUDE as double,",
				"          STORE_ID as short,",
				"          STORE_NAME as string,",
				"          WEB_ADDRESS as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> StoresRaw",
				"OrdersRaw derive(ORDER_DATE = toDate(ORDER_DATETIME, 'dd-MMM-yy HH.mm.ss.SS'),",
				"          UPDATED_TIMESTAMP = currentUTC()) ~> OrderDatetimeAndUpdatedTimestamp",
				"OrderDatetimeAndUpdatedTimestamp cast(output(",
				"          ORDER_ID as integer,",
				"          ORDER_DATETIME as string,",
				"          CUSTOMER_ID as integer,",
				"          ORDER_STATUS as string,",
				"          STORE_ID as integer,",
				"          ORDER_DATE as date,",
				"          UPDATED_TIMESTAMP as timestamp",
				"     ),",
				"     errors: true) ~> CastDataTypesOrders",
				"CastDataTypesOrders select(mapColumn(",
				"          ORDER_ID,",
				"          ORDER_DATE,",
				"          CUSTOMER_ID,",
				"          ORDER_STATUS,",
				"          STORE_ID,",
				"          UPDATED_TIMESTAMP",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropOrderDatetimeAndReorder",
				"OrdersItemsRaw cast(output(",
				"          ORDER_ID as integer,",
				"          LINE_ITEM_ID as integer,",
				"          PRODUCT_ID as integer,",
				"          UNIT_PRICE as double,",
				"          QUANTITY as integer",
				"     ),",
				"     errors: true) ~> CastTypesOrderItems",
				"CastTypesOrderItems derive(UPDATED_TIMESTAMP = currentUTC()) ~> UpdatedDateOrderItems",
				"UpdatedDateOrderItems select(mapColumn(",
				"          ORDER_ID,",
				"          PRODUCT_ID,",
				"          UNIT_PRICE,",
				"          QUANTITY,",
				"          UPDATED_TIMESTAMP",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropItemLineId",
				"CustomersRaw cast(output(",
				"          CUSTOMER_ID as integer,",
				"          EMAIL_ADDRESS as string,",
				"          FULL_NAME as string",
				"     ),",
				"     errors: true) ~> CastDataTypesCustomers",
				"CastDataTypesCustomers derive(UPDATED_TIMESTAMP = currentUTC()) ~> UpdateteTimestampCustomers",
				"ProductsRaw cast(output(",
				"          PRODUCT_ID as integer,",
				"          PRODUCT_NAME as string,",
				"          UNIT_PRICE as double",
				"     ),",
				"     errors: true) ~> CastDataTypesStores",
				"CastDataTypesStores derive() ~> derivedColumn1",
				"DropOrderDatetimeAndReorder sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> OrdersSink",
				"DropItemLineId sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> OrderItemSink",
				"UpdateteTimestampCustomers sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> CustomerSink",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}